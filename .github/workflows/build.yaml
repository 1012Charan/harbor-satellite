name: Build

on:
  workflow_run:
    workflows: [Lint]
    types:
      - completed

jobs:
  dagger-build-satellite:
    runs-on: ubuntu-latest
    # unless you specify the success on the event,
    # this job will also run if the lint workflow was skipped(which is also the case if the condition for the file extension type is false).
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.22'

      - name: Update CA certificates
        run: |
          apt-get update
          apt-get install -y ca-certificates
          update-ca-certificates

      - name: Install curl
        run: apt-get install -y curl

      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh

      - name: Verify Docker installation
        run: docker --version

      - name: Install Dagger CLI
        run: |
          cd /usr/local
          curl -L https://dl.dagger.io/dagger/install.sh | sh
          cd -

      - name: Build Satellite with Dagger
        run: dagger run go run ci/main.go satellite
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}

  dagger-build-ground-control:
    # unless you specify the success on the event,
    # this job will also run if the lint workflow was skipped(which is also the case if the condition for the file extension type is false).
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.22'

      - name: Update CA certificates
        run: |
          apt-get update
          apt-get install -y ca-certificates
          update-ca-certificates

      - name: Install curl
        run: apt-get install -y curl

      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh

      - name: Verify Docker installation
        run: docker --version

      - name: Install Dagger CLI
        run: |
          cd /usr/local
          curl -L https://dl.dagger.io/dagger/install.sh | sh
          cd -

      - name: Build Ground Control with Dagger
        run: dagger run go run ci/main.go ground-control
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
